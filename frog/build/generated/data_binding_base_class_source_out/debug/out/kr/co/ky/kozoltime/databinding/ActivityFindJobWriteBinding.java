// Generated by view binder compiler. Do not edit!
package kr.co.ky.kozoltime.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.co.ky.kozoltime.R;

public final class ActivityFindJobWriteBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button findJobWriteButton;

  @NonNull
  public final EditText findJobWriteContext;

  @NonNull
  public final EditText findJobWriteOfficeName;

  @NonNull
  public final EditText findJobWriteTitle;

  private ActivityFindJobWriteBinding(@NonNull LinearLayout rootView,
      @NonNull Button findJobWriteButton, @NonNull EditText findJobWriteContext,
      @NonNull EditText findJobWriteOfficeName, @NonNull EditText findJobWriteTitle) {
    this.rootView = rootView;
    this.findJobWriteButton = findJobWriteButton;
    this.findJobWriteContext = findJobWriteContext;
    this.findJobWriteOfficeName = findJobWriteOfficeName;
    this.findJobWriteTitle = findJobWriteTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFindJobWriteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFindJobWriteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_find_job_write, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFindJobWriteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.find_job_write_button;
      Button findJobWriteButton = ViewBindings.findChildViewById(rootView, id);
      if (findJobWriteButton == null) {
        break missingId;
      }

      id = R.id.find_job_write_context;
      EditText findJobWriteContext = ViewBindings.findChildViewById(rootView, id);
      if (findJobWriteContext == null) {
        break missingId;
      }

      id = R.id.find_job_write_office_name;
      EditText findJobWriteOfficeName = ViewBindings.findChildViewById(rootView, id);
      if (findJobWriteOfficeName == null) {
        break missingId;
      }

      id = R.id.find_job_write_title;
      EditText findJobWriteTitle = ViewBindings.findChildViewById(rootView, id);
      if (findJobWriteTitle == null) {
        break missingId;
      }

      return new ActivityFindJobWriteBinding((LinearLayout) rootView, findJobWriteButton,
          findJobWriteContext, findJobWriteOfficeName, findJobWriteTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
