// Generated by view binder compiler. Do not edit!
package kr.co.ky.kozoltime.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.co.ky.kozoltime.R;

public final class ActivityWriteBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout jobEpilogueSpinnerCategory;

  @NonNull
  public final Button writeBtn;

  @NonNull
  public final LinearLayout writeContextLinear;

  @NonNull
  public final Spinner writeSpinner;

  @NonNull
  public final EditText writeSsulContext;

  @NonNull
  public final EditText writeSsulTitle;

  private ActivityWriteBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout jobEpilogueSpinnerCategory, @NonNull Button writeBtn,
      @NonNull LinearLayout writeContextLinear, @NonNull Spinner writeSpinner,
      @NonNull EditText writeSsulContext, @NonNull EditText writeSsulTitle) {
    this.rootView = rootView;
    this.jobEpilogueSpinnerCategory = jobEpilogueSpinnerCategory;
    this.writeBtn = writeBtn;
    this.writeContextLinear = writeContextLinear;
    this.writeSpinner = writeSpinner;
    this.writeSsulContext = writeSsulContext;
    this.writeSsulTitle = writeSsulTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWriteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWriteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_write, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWriteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.job_epilogue_spinner_category;
      LinearLayout jobEpilogueSpinnerCategory = ViewBindings.findChildViewById(rootView, id);
      if (jobEpilogueSpinnerCategory == null) {
        break missingId;
      }

      id = R.id.write_btn;
      Button writeBtn = ViewBindings.findChildViewById(rootView, id);
      if (writeBtn == null) {
        break missingId;
      }

      id = R.id.write_context_linear;
      LinearLayout writeContextLinear = ViewBindings.findChildViewById(rootView, id);
      if (writeContextLinear == null) {
        break missingId;
      }

      id = R.id.write_spinner;
      Spinner writeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (writeSpinner == null) {
        break missingId;
      }

      id = R.id.write_ssul_context;
      EditText writeSsulContext = ViewBindings.findChildViewById(rootView, id);
      if (writeSsulContext == null) {
        break missingId;
      }

      id = R.id.write_ssul_title;
      EditText writeSsulTitle = ViewBindings.findChildViewById(rootView, id);
      if (writeSsulTitle == null) {
        break missingId;
      }

      return new ActivityWriteBinding((LinearLayout) rootView, jobEpilogueSpinnerCategory, writeBtn,
          writeContextLinear, writeSpinner, writeSsulContext, writeSsulTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
