// Generated by view binder compiler. Do not edit!
package kr.co.ky.kozoltime.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.co.ky.kozoltime.R;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button searchButton;

  @NonNull
  public final EditText searchEdit;

  @NonNull
  public final LinearLayout searchLinear;

  @NonNull
  public final RecyclerView searchRecyclerview;

  @NonNull
  public final Spinner spinnerForSearch;

  private ActivitySearchBinding(@NonNull ConstraintLayout rootView, @NonNull Button searchButton,
      @NonNull EditText searchEdit, @NonNull LinearLayout searchLinear,
      @NonNull RecyclerView searchRecyclerview, @NonNull Spinner spinnerForSearch) {
    this.rootView = rootView;
    this.searchButton = searchButton;
    this.searchEdit = searchEdit;
    this.searchLinear = searchLinear;
    this.searchRecyclerview = searchRecyclerview;
    this.spinnerForSearch = spinnerForSearch;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.search_button;
      Button searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.search_edit;
      EditText searchEdit = ViewBindings.findChildViewById(rootView, id);
      if (searchEdit == null) {
        break missingId;
      }

      id = R.id.search_linear;
      LinearLayout searchLinear = ViewBindings.findChildViewById(rootView, id);
      if (searchLinear == null) {
        break missingId;
      }

      id = R.id.search_recyclerview;
      RecyclerView searchRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (searchRecyclerview == null) {
        break missingId;
      }

      id = R.id.spinner_for_search;
      Spinner spinnerForSearch = ViewBindings.findChildViewById(rootView, id);
      if (spinnerForSearch == null) {
        break missingId;
      }

      return new ActivitySearchBinding((ConstraintLayout) rootView, searchButton, searchEdit,
          searchLinear, searchRecyclerview, spinnerForSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
