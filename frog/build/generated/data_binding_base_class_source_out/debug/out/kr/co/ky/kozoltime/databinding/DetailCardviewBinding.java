// Generated by view binder compiler. Do not edit!
package kr.co.ky.kozoltime.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.co.ky.kozoltime.R;

public final class DetailCardviewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView detailCardview;

  @NonNull
  public final TextView detailCardviewContext;

  @NonNull
  public final TextView detailCardviewDate;

  @NonNull
  public final TextView detailCardviewNickname;

  private DetailCardviewBinding(@NonNull LinearLayout rootView, @NonNull CardView detailCardview,
      @NonNull TextView detailCardviewContext, @NonNull TextView detailCardviewDate,
      @NonNull TextView detailCardviewNickname) {
    this.rootView = rootView;
    this.detailCardview = detailCardview;
    this.detailCardviewContext = detailCardviewContext;
    this.detailCardviewDate = detailCardviewDate;
    this.detailCardviewNickname = detailCardviewNickname;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DetailCardviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DetailCardviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.detail_cardview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DetailCardviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detail_cardview;
      CardView detailCardview = ViewBindings.findChildViewById(rootView, id);
      if (detailCardview == null) {
        break missingId;
      }

      id = R.id.detail_cardview_context;
      TextView detailCardviewContext = ViewBindings.findChildViewById(rootView, id);
      if (detailCardviewContext == null) {
        break missingId;
      }

      id = R.id.detail_cardview_date;
      TextView detailCardviewDate = ViewBindings.findChildViewById(rootView, id);
      if (detailCardviewDate == null) {
        break missingId;
      }

      id = R.id.detail_cardview_nickname;
      TextView detailCardviewNickname = ViewBindings.findChildViewById(rootView, id);
      if (detailCardviewNickname == null) {
        break missingId;
      }

      return new DetailCardviewBinding((LinearLayout) rootView, detailCardview,
          detailCardviewContext, detailCardviewDate, detailCardviewNickname);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
